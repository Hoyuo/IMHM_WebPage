<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis/mapper.xml">

    <!--converted to mysql-->
    <insert id="register" parameterType="DB.DTO.UserDTO">
        insert into  user
           (user.username
           ,user.password
           ,user.nick
          )
           VALUES
            (#{id},#{pw},#{nick});
    </insert>

    <!--converted to mysql-->
    <select id="login" parameterType="DB.DTO.UserInfoDTO" resultType="DB.DTO.UserDTO">
        SELECT
          user.username
          ,user.password
          ,user.nick
        FROM user
        WHERE username=#{id} AND password=#{pw}
    </select>

    <!-- deprecated-->
    <select id="searchImage" resultType="DB.DTO.ImageDTO" parameterType="String">
      SELECT
          album_image
      FROM music
      WHERE idx=#{id}
    </select>

    <select id="test" parameterType="java.lang.String" resultType="DB.DTO.testDTO">
      SELECT
            [Title],
	        [AlbumName]
        FROM [IHMHdb].[dbo].[Music]
      WHERE [Title] =#{Title}
    </select>

    <!--converted to mysql-->
    <select id="searchHistory" parameterType="DB.DTO.searchOffsetDTO" resultType="DB.DTO.HistroyDTO" >
        Select  C.title, C.album_name,C.artist,B.search_date,B.longitude as Longtitude, B.latitude as Latitude, B.music_idx
            From
            user as A Inner JOIN search_history as B on A.idx = B.user_idx
            Inner Join music as C on B.music_idx = C.idx

        WHERE A.username=#{id} order by B.search_date desc LIMIT #{offset},#{limit}

    </select>

    <!--converted to mysql-->
    <select id="searchmobileHistory" parameterType="java.lang.String" resultType="DB.DTO.mobileHistoryDTO" >
        Select  C.title, C.album_name,C.artist,B.search_date,B.longitude as Longtitude, B.latitude as Latitude, B.music_idx
            From
           user as A Inner JOIN search_history as B on A.idx = B.user_idx
          Inner Join music as C on B.music_idx = C.idx

        WHERE A.username=#{id} order by B.search_date desc
    </select>

    <!--deprecated-->
    <!--<select id="getIdList" parameterType="java.lang.String" resultType="java.lang.String">-->
    <!--SELECT-->
      <!--[Username]-->
    <!--FROM [IHMHdb].[dbo].[User]-->
    <!--where [Username]=#{id}-->
    <!--</select>-->

    <!--TODO test needed-->
    <insert id="uploadHistory" parameterType="DB.DTO.UploadHistoryDTO">

    INSERT INTO search_history
               (user_idx
               ,music_idx
               ,latitude
               ,longitude
               ,search_date)
         VALUES
               (
               (select user.idx from user where user.username=#{id} Limit 0,1)
               ,#{musicIdx}
               ,#{latitude},#{longitude}
               ,NOW())

    </insert>

    <!--converted to mysql-->
    <select id="searchMusicByIdx" parameterType="java.lang.Integer" resultType="DB.DTO.MusicDTO">

        Select C.title, C.album_name,C.artist,B.search_date,B.longitude as Longtitude, B.latitude as Latitude, B.music_idx
        From
        user as A Inner JOIN search_history as B on A.idx = B.user_idx
        Inner Join music as C on B.music_idx = C.idx

        Where A.idx=#{musicidx}  order by B.search_date desc Limit 0,1
    </select>
</mapper>